[[0.008419000000000001,{"lines":{"0":[["bash-3.2$                                                                       ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":10,"y":0,"visible":true}}],[0.808189,{"lines":{"0":[["bash-3.2$ exit                                                                  ",{}]]},"cursor":{"x":14}}],[0.514777,{"lines":{"0":[["bash-3.2$ screen /dev/cu.usbserial-A903C33X 115200 -L                           ",{}]]},"cursor":{"x":53}}],[2.720666,{"cursor":{"x":0,"y":1}}],[0.015736,{}],[1.501946,{"lines":{"0":[["                                                                                ",{}]]},"cursor":{"y":0}}],[0.009582,{"lines":{"1":[["Poky (Yocto Project Reference Distro) 1.6 edison                                ",{}]]},"cursor":{"x":49,"y":1}}],[0.015832,{"lines":{"1":[["Poky (Yocto Project Reference Distro) 1.6 edison ttyMFD2                        ",{}]],"3":[["edison login:                                                                   ",{}]]},"cursor":{"x":14,"y":3}}],[0.5121599999999999,{"lines":{"3":[["edison login: r                                                                 ",{}]]},"cursor":{"x":15}}],[0.095623,{"lines":{"3":[["edison login: ro                                                                ",{}]]},"cursor":{"x":16}}],[0.128194,{"lines":{"3":[["edison login: roo                                                               ",{}]]},"cursor":{"x":17}}],[0.12805,{"lines":{"3":[["edison login: root                                                              ",{}]]},"cursor":{"x":18}}],[0.09589499999999999,{"cursor":{"x":0,"y":4}}],[0.032065,{"lines":{"4":[["root@edison:~#                                                                  ",{}]]},"cursor":{"x":15}}],[1.119618,{"lines":{"4":[["root@edison:~# l                                                                ",{}]]},"cursor":{"x":16}}],[0.047772,{"lines":{"4":[["root@edison:~# ls                                                               ",{}]]},"cursor":{"x":17}}],[0.112237,{"lines":{"5":[["list1                                                                           ",{}]]},"cursor":{"x":7,"y":5}}],[0.015935,{"lines":{"5":[["list1    otp.bin                                                                ",{}]],"6":[["root@edison:~#                                                                  ",{}]]},"cursor":{"x":15,"y":6}}],[0.543845,{"lines":{"6":[["root@edison:~# c                                                                ",{}]]},"cursor":{"x":16}}],[0.08000599999999999,{"lines":{"6":[["root@edison:~# cd                                                               ",{}]]},"cursor":{"x":17}}],[0.047768,{"cursor":{"x":18}}],[0.447976,{"lines":{"6":[["root@edison:~# cd l                                                             ",{}]]},"cursor":{"x":19}}],[0.191692,{"lines":{"6":[["root@edison:~# cd li                                                            ",{}]]},"cursor":{"x":20}}],[0.127937,{"lines":{"6":[["root@edison:~# cd list1/                                                        ",{}]]},"cursor":{"x":24}}],[0.575911,{"cursor":{"x":0,"y":7}}],[0.015881,{"lines":{"7":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21}}],[0.496097,{"lines":{"7":[["root@edison:~/list1# l                                                          ",{}]]},"cursor":{"x":22}}],[0.127865,{"lines":{"7":[["root@edison:~/list1# ls                                                         ",{}]]},"cursor":{"x":23}}],[0.431832,{"lines":{"8":[["readIO.js                                                                       ",{}]],"9":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21,"y":9}}],[3.534777,{"lines":{"9":[["root@edison:~/list1# v                                                          ",{}]]},"cursor":{"x":22}}],[0.112006,{"lines":{"9":[["root@edison:~/list1# vi                                                         ",{}]]},"cursor":{"x":23}}],[0.111712,{"lines":{"9":[["root@edison:~/list1# vie                                                        ",{}]]},"cursor":{"x":24}}],[0.080124,{"lines":{"9":[["root@edison:~/list1# view                                                       ",{}]]},"cursor":{"x":25}}],[0.095802,{"cursor":{"x":26}}],[0.175948,{"lines":{"9":[["root@edison:~/list1# view r                                                     ",{}]]},"cursor":{"x":27}}],[0.06404799999999999,{"lines":{"9":[["root@edison:~/list1# view re                                                    ",{}]]},"cursor":{"x":28}}],[0.144152,{"lines":{"9":[["root@edison:~/list1# view readIO.js                                             ",{}]]},"cursor":{"x":36}}],[0.463794,{"lines":{"10":[["-bash: view: command not found                                                  ",{}]],"11":[["root@ediso                                                                      ",{}]]},"cursor":{"x":10,"y":11}}],[0.016032,{"lines":{"11":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21}}],[1.199659,{"lines":{"11":[["root@edison:~/list1# v                                                          ",{}]]},"cursor":{"x":22}}],[0.079813,{"lines":{"11":[["root@edison:~/list1# vi                                                         ",{}]]},"cursor":{"x":23}}],[0.112052,{"cursor":{"x":24}}],[0.399788,{"lines":{"11":[["root@edison:~/list1# vi r                                                       ",{}]]},"cursor":{"x":25}}],[0.063975,{"lines":{"11":[["root@edison:~/list1# vi re                                                      ",{}]]},"cursor":{"x":26}}],[0.160034,{"lines":{"11":[["root@edison:~/list1# vi readIO.js                                               ",{}]]},"cursor":{"x":34}}],[0.415765,{"cursor":{"x":0,"y":12}}],[0.014117,{"lines":{"0":[["var m = require('mraa'); //require mraa                                         ",{}]],"1":[["console.log('MRAA Version: ' + m.getVersion());                                 ",{}]],"3":[["//s                                                                             ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]]},"cursor":{"x":3,"y":3}}],[0.016077,{"lines":{"3":[["//setup access analog inpuput pin 0, 1                                          ",{}]],"4":[["var analogPin0 = new m.Aio(0);                                                  ",{}]],"5":[["var analogPin1 = new m.Aio(1);                                                  ",{}]],"7":[["//read the value of the analog pin                                              ",{}]],"8":[["var analogValue0 = analogPin0.rea                                               ",{}]]},"cursor":{"x":33,"y":8}}],[0.016036,{"lines":{"8":[["var analogValue0 = analogPin0.read();                                           ",{}]],"9":[["var analogValue1 = analogPin1.read();                                           ",{}]],"11":[["// convert                                                                      ",{}]],"12":[["function value2temp(value) {                                                    ",{}]],"13":[["        var B = 3975;                                                           ",{}]],"14":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"15":[["        var temp = 1/(Mat                                                       ",{}]]},"cursor":{"x":25,"y":15}}],[0.016253,{"lines":{"15":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"16":[["        temp = Math.round(temp);                                                ",{}]],"17":[["        return temp;                                                            ",{}]],"18":[["}                                                                               ",{}]],"20":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"22":[["//write the value of the analog pin to t                                        ",{}]]},"cursor":{"x":40,"y":22}}],[0.015502,{"lines":{"22":[["//write the value of the analog pin to the console                              ",{}]],"23":[["- readIO.js 1/25 4%                                                             ",{}]]},"cursor":{"x":0,"y":0}}],[4.030751,{"lines":{"23":[["- readIO.js 2/25 8%                                                             ",{}]]},"cursor":{"y":1}}],[0.191895,{"lines":{"23":[["- readIO.js 3/25 12%                                                            ",{}]]},"cursor":{"y":2}}],[0.159956,{"lines":{"23":[["- readIO.js 4/25 16%                                                            ",{}]]},"cursor":{"y":3}}],[0.128005,{"lines":{"23":[["- readIO.js 5/25 20%                                                            ",{}]]},"cursor":{"y":4}}],[3.35876,{"lines":{"23":[["- readIO.js 6/25 24%                                                            ",{}]]},"cursor":{"y":5}}],[1.311485,{"lines":{"23":[["- readIO.js 7/25 28%                                                            ",{}]]},"cursor":{"y":6}}],[0.191686,{"lines":{"23":[["- readIO.js 8/25 32%                                                            ",{}]]},"cursor":{"y":7}}],[0.144064,{"lines":{"23":[["- readIO.js 9/                                                                  ",{}]]},"cursor":{"x":14,"y":23}}],[0.016017,{"lines":{"23":[["- readIO.js 9/25 36%                                                            ",{}]]},"cursor":{"x":0,"y":8}}],[1.11969,{"cursor":{"y":23}}],[0.016029,{"lines":{"23":[["- readIO.js 10/25 40%                                                           ",{}]]},"cursor":{"y":9}}],[3.678887,{"lines":{"23":[["- readIO.js 11/25 44%                                                           ",{}]]},"cursor":{"y":10}}],[0.191717,{"lines":{"23":[["- readIO.js 12/25 48%                                                           ",{}]]},"cursor":{"y":11}}],[1.167471,{"cursor":{"x":1}}],[0.49615,{"cursor":{"x":2}}],[0.079777,{"cursor":{"x":3}}],[0.095836,{"cursor":{"x":4}}],[0.08017100000000001,{"cursor":{"x":5}}],[0.080011,{"cursor":{"x":6}}],[0.095961,{"cursor":{"x":7}}],[0.079997,{"cursor":{"x":8}}],[0.079981,{"cursor":{"x":9}}],[0.94368,{"lines":{"23":[["I readIO.js 12/25 48%                                                           ",{}]]},"cursor":{"x":10}}],[0.127873,{"cursor":{"x":0,"y":23}}],[0.016017,{"lines":{"23":[["I readIO.js [Modified] 12/25 48%                                                ",{}]]},"cursor":{"x":11,"y":11}}],[0.5599150000000001,{"lines":{"11":[["// convert F                                                                    ",{}]]},"cursor":{"x":12}}],[0.223872,{"cursor":{"x":13}}],[0.191784,{"lines":{"11":[["// convert F t                                                                  ",{}]]},"cursor":{"x":14}}],[0.176095,{"lines":{"11":[["// convert F to                                                                 ",{}]]},"cursor":{"x":15}}],[0.383577,{"cursor":{"x":16}}],[0.256178,{"lines":{"11":[["// convert F to C                                                               ",{}]]},"cursor":{"x":17}}],[1.215636,{"cursor":{"x":16}}],[0.016088,{"lines":{"23":[["- readIO.js [Modified] 12/25 48%                                                ",{}]]}}],[0.127822,{"lines":{"23":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":23}}],[0.191928,{"lines":{"23":[[":w                                                                              ",{}]]},"cursor":{"x":2}}],[0.112032,{"lines":{"23":[["'readIO.js' 25L, 670C                                                           ",{}]]},"cursor":{"x":16,"y":11}}],[0.476543,{"lines":{"23":[["- rea                                                                           ",{}]]},"cursor":{"x":5,"y":23}}],[0.015341,{"lines":{"23":[["- readIO.js 13/25 52%                                                           ",{}]]},"cursor":{"x":16,"y":12}}],[1.055602,{"lines":{"23":[["- readIO.js 14/25 56%                                                           ",{}]]},"cursor":{"y":13}}],[0.191627,{"lines":{"23":[["- readIO.js 15/25 60%                                                           ",{}]]},"cursor":{"y":14}}],[0.17614,{"cursor":{"x":0,"y":23}}],[0.016163,{"lines":{"23":[["- readIO.js 16/25 64%                                                           ",{}]]},"cursor":{"x":16,"y":15}}],[0.143988,{"lines":{"23":[["- readIO.js 17/25 68%                                                           ",{}]]},"cursor":{"y":16}}],[0.367811,{"lines":{"23":[["- readIO.js 18/25 72%                                                           ",{}]]},"cursor":{"y":17}}],[1.263638,{"lines":{"23":[["- readIO.js 19/25 76%                                                           ",{}]]},"cursor":{"x":0,"y":18}}],[0.15988,{"lines":{"23":[["- readIO.js 20/25 80%                                                           ",{}]]},"cursor":{"y":19}}],[0.143796,{"lines":{"23":[["- readIO.js 21/25 84%                                                           ",{}]]},"cursor":{"y":20}}],[2.799217,{"lines":{"23":[["- readIO.js 22/25 88%                                                           ",{}]]},"cursor":{"y":21}}],[0.175828,{"lines":{"23":[["- readIO.js 23/25 92%                                                           ",{}]]},"cursor":{"y":22}}],[0.927851,{"lines":{"0":[["console.log('MRAA Version: ' + m.getVersion());                                 ",{}]],"1":[[" onsole.log('MRAA Version: ' + m.getVersion());                                 ",{}]]},"cursor":{"x":1,"y":1}}],[0.016019,{"lines":{"1":[["                                                                                ",{}]],"2":[["//setup access analog inpuput pin 0, 1                                          ",{}]],"3":[["var analogPin0 = new m.Aio(0);                                                  ",{}]],"4":[["var analogPin1 = new m.Aio(1);                                                  ",{}]],"5":[["                        io(1);                                                  ",{}]]},"cursor":{"x":24,"y":5}}],[0.016159,{"lines":{"5":[["                                                                                ",{}]],"6":[["//read the value of the analog pin                                              ",{}]],"7":[["var analogValue0 = analogPin0.read();                                           ",{}]],"8":[["var analogValue1 = analogPin1.read();                                           ",{}]],"9":[["                                                                                ",{}]],"10":[["// convert F to C                                                               ",{}]],"11":[["f/ convert F to C                                                               ",{}]]},"cursor":{"x":1,"y":11}}],[0.016217,{"lines":{"11":[["function value2temp(value) {                                                    ",{}]],"12":[["        var B = 3975;                                                           ",{}]],"13":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"14":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"15":[["        temp = Math.round(temp)r/10000)/B+1/298.15)-273.15;                     ",{}]]},"cursor":{"x":31,"y":15}}],[0.016004,{"lines":{"15":[["        temp = Math.round(temp);                                                ",{}]],"16":[["        return temp;                                                            ",{}]],"17":[["}                                                                               ",{}]],"18":[["                                                                                ",{}]],"19":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"20":[["                                      );                                        ",{}]]},"cursor":{"x":38,"y":20}}],[0.010687,{"lines":{"20":[["                                                                                ",{}]],"21":[["//write the value of the analog pin to the console                              ",{}]],"22":[["console.log(\"A0: \" + analogValue0);                                             ",{}]]},"cursor":{"x":0,"y":22}}],[0.015603,{"lines":{"23":[["- readIO.js 24/25 96%                                                           ",{}]]}}],[0.077101,{"lines":{"0":[["                                                                                ",{}]],"1":[["//s                                                                             ",{}]]},"cursor":{"x":3,"y":1}}],[0.01629,{"lines":{"1":[["//setup access analog inpuput pin 0, 1                                          ",{}]],"2":[["var analogPin0 = new m.Aio(0);                                                  ",{}]],"3":[["var analogPin1 = new m.Aio(1);                                                  ",{}]],"4":[["                                                                                ",{}]],"5":[["//read the value of the analog pin                                              ",{}]],"6":[["varead the value of the analog pin                                              ",{}]]},"cursor":{"y":6}}],[0.016029,{"lines":{"6":[["var analogValue0 = analogPin0.read();                                           ",{}]],"7":[["var analogValue1 = analogPin1.read();                                           ",{}]],"8":[["                                                                                ",{}]],"9":[["// convert F to C                                                               ",{}]],"10":[["function value2temp(value) {                                                    ",{}]],"11":[["        var B = 3975; lue) {                                                    ",{}]]},"cursor":{"x":22,"y":11}}],[0.016024,{"lines":{"11":[["        var B = 3975;                                                           ",{}]],"12":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"13":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"14":[["        temp = Math.round(temp);                                                ",{}]],"15":[["        return temp;         p);                                                ",{}]]},"cursor":{"x":29,"y":15}}],[0.016513,{"lines":{"15":[["        return temp;                                                            ",{}]],"16":[["}                                                                               ",{}]],"17":[["                                                                                ",{}]],"18":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"19":[["                                                                                ",{}]],"20":[["//write the value of the analog pin to the cons                                 ",{}]]},"cursor":{"x":47,"y":20}}],[0.010591,{"lines":{"20":[["//write the value of the analog pin to the console                              ",{}]],"21":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"22":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"23":[["- readIO.js 25/25 10                                                            ",{}]]},"cursor":{"x":20,"y":23}}],[0.015539,{"lines":{"23":[["- readIO.js 25/25 100%                                                          ",{}]]},"cursor":{"x":0,"y":22}}],[1.871325,{"cursor":{"x":1}}],[0.511807,{"cursor":{"x":2}}],[0.495815,{"cursor":{"x":3}}],[0.07996399999999999,{"cursor":{"x":4}}],[0.07990800000000001,{"cursor":{"x":5}}],[0.09603399999999999,{"cursor":{"x":6}}],[0.079988,{"cursor":{"x":7}}],[0.07994,{"cursor":{"x":8}}],[0.07968799999999999,{"cursor":{"x":9}}],[0.09626800000000001,{"cursor":{"x":10}}],[0.07997600000000001,{"cursor":{"x":11}}],[0.079857,{"cursor":{"x":12}}],[0.095995,{"cursor":{"x":13}}],[0.08007300000000001,{"cursor":{"x":14}}],[0.079957,{"cursor":{"x":15}}],[0.079736,{"cursor":{"x":16}}],[0.096044,{"cursor":{"x":17}}],[0.080126,{"cursor":{"x":18}}],[0.079956,{"cursor":{"x":19}}],[0.079859,{"cursor":{"x":20}}],[0.09596,{"cursor":{"x":21}}],[0.08016,{"cursor":{"x":22}}],[0.08011,{"cursor":{"x":23}}],[0.095832,{"cursor":{"x":24}}],[0.07988099999999999,{"cursor":{"x":25}}],[0.08007499999999999,{"cursor":{"x":26}}],[0.079827,{"cursor":{"x":27}}],[1.039696,{"lines":{"23":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":23}}],[0.143817,{"lines":{"23":[[":q                                                                              ",{}]]},"cursor":{"x":2}}],[0.112047,{"lines":{"23":[["- readIO.js 25/25 100%                                                          ",{}]]},"cursor":{"x":27,"y":22}}],[0.016047,{"lines":{"23":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21,"y":23}}],[0.783493,{"lines":{"0":[["//setup access analog inpuput pin 0, 1                                          ",{}]],"1":[["var analogPin0 = new m.Aio(0);                                                  ",{}]],"2":[["var analogPin1 = new m.Aio(1);                                                  ",{}]],"3":[["                                                                                ",{}]],"4":[["//read the value of the analog pin                                              ",{}]],"5":[["var analogValue0 = analogPin0.read();                                           ",{}]],"6":[["var analogValue1 = analogPin1.read();                                           ",{}]],"7":[["                                                                                ",{}]],"8":[["// convert F to C                                                               ",{}]],"9":[["function value2temp(value) {                                                    ",{}]],"10":[["        var B = 3975;                                                           ",{}]],"11":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"12":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"13":[["        temp = Math.round(temp);                                                ",{}]],"14":[["        return temp;                                                            ",{}]],"15":[["}                                                                               ",{}]],"16":[["                                                                                ",{}]],"17":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"18":[["                                                                                ",{}]],"19":[["//write the value of the analog pin to the console                              ",{}]],"20":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"21":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"22":[["root@edison:~/list1#                                                            ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.01633,{"lines":{"23":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21}}],[0.111658,{"lines":{"0":[["var analogPin0 = new m.Aio(0);                                                  ",{}]],"1":[["var analogPin1 = new m.Aio(1);                                                  ",{}]],"2":[["                                                                                ",{}]],"3":[["//read the value of the analog pin                                              ",{}]],"4":[["var analogValue0 = analogPin0.read();                                           ",{}]],"5":[["var analogValue1 = analogPin1.read();                                           ",{}]],"6":[["                                                                                ",{}]],"7":[["// convert F to C                                                               ",{}]],"8":[["function value2temp(value) {                                                    ",{}]],"9":[["        var B = 3975;                                                           ",{}]],"10":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"11":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"12":[["        temp = Math.round(temp);                                                ",{}]],"13":[["        return temp;                                                            ",{}]],"14":[["}                                                                               ",{}]],"15":[["                                                                                ",{}]],"16":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"17":[["                                                                                ",{}]],"18":[["//write the value of the analog pin to the console                              ",{}]],"19":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"20":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"21":[["root@edison:~/list1#                                                            ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.016017,{"lines":{"23":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21}}],[1.551665,{"lines":{"23":[["root@edison:~/list1# n                                                          ",{}]]},"cursor":{"x":22}}],[0.06406199999999999,{"lines":{"23":[["root@edison:~/list1# no                                                         ",{}]]},"cursor":{"x":23}}],[0.255605,{"lines":{"23":[["root@edison:~/list1# nod                                                        ",{}]]},"cursor":{"x":24}}],[0.096333,{"lines":{"23":[["root@edison:~/list1# node                                                       ",{}]]},"cursor":{"x":25}}],[0.175817,{"cursor":{"x":26}}],[0.415663,{"lines":{"23":[["root@edison:~/list1# node .                                                     ",{}]]},"cursor":{"x":27}}],[0.112168,{"lines":{"23":[["root@edison:~/list1# node ./                                                    ",{}]]},"cursor":{"x":28}}],[0.063945,{"lines":{"23":[["root@edison:~/list1# node ./readIO.js                                           ",{}]]},"cursor":{"x":38}}],[1.935386,{"lines":{"0":[["var analogPin1 = new m.Aio(1);                                                  ",{}]],"1":[["                                                                                ",{}]],"2":[["//read the value of the analog pin                                              ",{}]],"3":[["var analogValue0 = analogPin0.read();                                           ",{}]],"4":[["var analogValue1 = analogPin1.read();                                           ",{}]],"5":[["                                                                                ",{}]],"6":[["// convert F to C                                                               ",{}]],"7":[["function value2temp(value) {                                                    ",{}]],"8":[["        var B = 3975;                                                           ",{}]],"9":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"10":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"11":[["        temp = Math.round(temp);                                                ",{}]],"12":[["        return temp;                                                            ",{}]],"13":[["}                                                                               ",{}]],"14":[["                                                                                ",{}]],"15":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"16":[["                                                                                ",{}]],"17":[["//write the value of the analog pin to the console                              ",{}]],"18":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"19":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"20":[["root@edison:~/list1#                                                            ",{}]],"22":[["root@edison:~/list1# node ./readIO.js                                           ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.495702,{"lines":{"0":[["                                                                                ",{}]],"1":[["//read the value of the analog pin                                              ",{}]],"2":[["var analogValue0 = analogPin0.read();                                           ",{}]],"3":[["var analogValue1 = analogPin1.read();                                           ",{}]],"4":[["                                                                                ",{}]],"5":[["// convert F to C                                                               ",{}]],"6":[["function value2temp(value) {                                                    ",{}]],"7":[["        var B = 3975;                                                           ",{}]],"8":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"9":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"10":[["        temp = Math.round(temp);                                                ",{}]],"11":[["        return temp;                                                            ",{}]],"12":[["}                                                                               ",{}]],"13":[["                                                                                ",{}]],"14":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"15":[["                                                                                ",{}]],"16":[["//write the value of the analog pin to the console                              ",{}]],"17":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"18":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"19":[["root@edison:~/list1#                                                            ",{}]],"21":[["root@edison:~/list1# node ./readIO.js                                           ",{}]],"22":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]]}}],[0.015979,{"lines":{"0":[["var analogValue0 = analogPin0.read();                                           ",{}]],"1":[["var analogValue1 = analogPin1.read();                                           ",{}]],"2":[["                                                                                ",{}]],"3":[["// convert F to C                                                               ",{}]],"4":[["function value2temp(value) {                                                    ",{}]],"5":[["        var B = 3975;                                                           ",{}]],"6":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"7":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"8":[["        temp = Math.round(temp);                                                ",{}]],"9":[["        return temp;                                                            ",{}]],"10":[["}                                                                               ",{}]],"11":[["                                                                                ",{}]],"12":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"14":[["//write the value of the analog pin to the console                              ",{}]],"15":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"16":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"17":[["root@edison:~/list1#                                                            ",{}]],"18":[["root@edison:~/list1#                                                            ",{}]],"19":[["root@edison:~/list1# node ./readIO.js                                           ",{}]],"20":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]],"21":[["A0: 539                                                                         ",{}]],"22":[["A1: 18                                                                          ",{}]]}}],[0.031957,{"lines":{"23":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21}}],[3.774623,{"lines":{"23":[["root@edison:~/list1# w                                                          ",{}]]},"cursor":{"x":22}}],[0.080065,{"lines":{"23":[["root@edison:~/list1# wa                                                         ",{}]]},"cursor":{"x":23}}],[0.159927,{"lines":{"23":[["root@edison:~/list1# wat                                                        ",{}]]},"cursor":{"x":24}}],[0.191902,{"lines":{"23":[["root@edison:~/list1# watc                                                       ",{}]]},"cursor":{"x":25}}],[0.07990899999999999,{"lines":{"23":[["root@edison:~/list1# watch                                                      ",{}]]},"cursor":{"x":26}}],[0.128233,{"cursor":{"x":27}}],[0.111878,{"lines":{"23":[["root@edison:~/list1# watch -                                                    ",{}]]},"cursor":{"x":28}}],[0.271885,{"lines":{"23":[["root@edison:~/list1# watch -n                                                   ",{}]]},"cursor":{"x":29}}],[0.367626,{"cursor":{"x":30}}],[0.480035,{"lines":{"23":[["root@edison:~/list1# watch -n 3                                                 ",{}]]},"cursor":{"x":31}}],[0.111868,{"cursor":{"x":32}}],[0.735718,{"lines":{"23":[["root@edison:~/list1# watch -n 3 n                                               ",{}]]},"cursor":{"x":33}}],[0.08005,{"lines":{"23":[["root@edison:~/list1# watch -n 3 no                                              ",{}]]},"cursor":{"x":34}}],[0.207809,{}],[1.055768,{"lines":{"23":[["root@edison:~/list1# watch -n 3 nod                                             ",{}]]},"cursor":{"x":35}}],[0.063948,{"lines":{"23":[["root@edison:~/list1# watch -n 3 node                                            ",{}]]},"cursor":{"x":36}}],[0.143902,{"cursor":{"x":37}}],[0.112063,{"lines":{"23":[["root@edison:~/list1# watch -n 3 node .                                          ",{}]]},"cursor":{"x":38}}],[0.079859,{"lines":{"23":[["root@edison:~/list1# watch -n 3 node ./                                         ",{}]]},"cursor":{"x":39}}],[0.144124,{"lines":{"23":[["root@edison:~/list1# watch -n 3 node ./readIO.js                                ",{}]]},"cursor":{"x":49}}],[0.319895,{"lines":{"0":[["var analogValue1 = analogPin1.read();                                           ",{}]],"1":[["                                                                                ",{}]],"2":[["// convert F to C                                                               ",{}]],"3":[["function value2temp(value) {                                                    ",{}]],"4":[["        var B = 3975;                                                           ",{}]],"5":[["        var r = (1023 - value)*10000/value;                                     ",{}]],"6":[["        var temp = 1/(Math.log(r/10000)/B+1/298.15)-273.15;                     ",{}]],"7":[["        temp = Math.round(temp);                                                ",{}]],"8":[["        return temp;                                                            ",{}]],"9":[["}                                                                               ",{}]],"10":[["                                                                                ",{}]],"11":[["analogValue1 = value2temp(analogValue1);                                        ",{}]],"12":[["                                                                                ",{}]],"13":[["//write the value of the analog pin to the console                              ",{}]],"14":[["console.log(\"A0: \" + analogValue0);                                             ",{}]],"15":[["console.log(\"A1: \" + analogValue1);                                             ",{}]],"16":[["root@edison:~/list1#                                                            ",{}]],"18":[["root@edison:~/list1# node ./readIO.js                                           ",{}]],"19":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]],"20":[["A0: 539                                                                         ",{}]],"21":[["A1: 18                                                                          ",{}]],"22":[["root@edison:~/list1# watch -n 3 node ./readIO.js                                ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.008415000000000001,{"lines":{"0":[["Every 3s: node ./readIO.js                                                      ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]]},"cursor":{"x":56,"y":0}}],[0.01559,{"lines":{"0":[["Every 3s: node ./readIO.js                                  2015-01-04 05:52:22 ",{}]]},"cursor":{"x":0,"y":2}}],[0.479783,{"lines":{"2":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]]},"cursor":{"y":3}}],[0.031981,{"lines":{"3":[["A0: 533                                                                         ",{}]],"4":[["A1: 19                                                                          ",{}]]},"cursor":{"y":5}}],[3.006727,{"lines":{"0":[["Every 3s: node ./readIO.js                                                      ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]]},"cursor":{"x":35,"y":0}}],[0.016092,{"lines":{"0":[["Every 3s: node ./readIO.js                                  2015-01-04 05:52:25 ",{}]]},"cursor":{"x":0,"y":2}}],[0.479895,{"lines":{"2":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]]},"cursor":{"y":3}}],[0.032122,{"lines":{"3":[["A0: 531                                                                         ",{}]],"4":[["A1: 19                                                                          ",{}]]},"cursor":{"y":5}}],[3.01214,{"lines":{"0":[["Every 3s: node ./readIO.js                                                      ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]]},"cursor":{"x":57,"y":0}}],[0.015544,{"lines":{"0":[["Every 3s: node ./readIO.js                                  2015-01-04 05:52:29 ",{}]]},"cursor":{"x":0,"y":2}}],[0.480083,{"lines":{"2":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]]},"cursor":{"y":3}}],[0.031974,{"lines":{"3":[["A0: 533                                                                         ",{}]],"4":[["A1: 19                                                                          ",{}]]},"cursor":{"y":5}}],[2.998994,{"lines":{"0":[["Every 3s: node ./readIO.js                                                      ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]]},"cursor":{"x":56,"y":0}}],[0.015808,{"lines":{"0":[["Every 3s: node ./readIO.js                                  2015-01-04 05:52:32 ",{}]]},"cursor":{"x":0,"y":2}}],[0.480067,{"lines":{"2":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]]},"cursor":{"y":3}}],[0.032007,{"lines":{"3":[["A0: 537                                                                         ",{}]],"4":[["A1: 19                                                                          ",{}]]},"cursor":{"y":5}}],[1.807213,{"lines":{"5":[["^C                                                                              ",{}]]},"cursor":{"y":6}}],[0.015985,{"lines":{"6":[["root@edison:~/list1#                                                            ",{}]]},"cursor":{"x":21}}],[3.081542,{"lines":{"0":[["                                                                                ",{}]],"1":[["MRAA Version: v0.5.4-46-g74d172c                                                ",{}]],"2":[["A0: 537                                                                         ",{}]],"3":[["A1: 19                                                                          ",{}]],"4":[["^C                                                                              ",{}]],"5":[["root@edison:~/list1#                                                            ",{}]],"6":[["                                                                                ",{}]]},"cursor":{"x":0,"y":1}}],[0.001013,{"lines":{"1":[["[detached]on: v0.5.4-46-g74d172c                                                ",{}]],"2":[["bash-3.2$                                                                       ",{}]]},"cursor":{"x":10,"y":2}}],[0.756176,{"lines":{"2":[["bash-3.2$ e                                                                     ",{}]]},"cursor":{"x":11}}],[0.08795799999999999,{"lines":{"2":[["bash-3.2$ ex                                                                    ",{}]]},"cursor":{"x":12}}],[0.196146,{"lines":{"2":[["bash-3.2$ exi                                                                   ",{}]]},"cursor":{"x":13}}],[0.08799700000000001,{"lines":{"2":[["bash-3.2$ exit                                                                  ",{}]]},"cursor":{"x":14}}],[0.107274,{"cursor":{"x":0,"y":3}}],[0.00016,{"lines":{"3":[["exit19                                                                          ",{}]]},"cursor":{"y":4}}]]